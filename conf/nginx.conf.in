daemon off;
worker_processes  32;
    
events {
  worker_connections  1024;
}
    
http {
  # Some sensible defaults.
  include               mime.types;
  default_type          application/octet-stream;
  keepalive_timeout     10;
  client_max_body_size  20m;
  sendfile              on;
  gzip                  on;
      
  # Directories
  client_body_temp_path tmp/client_body/  2 2;
  fastcgi_temp_path     tmp/fastcgi/;
  proxy_temp_path       tmp/proxy/;
  uwsgi_temp_path       tmp/uwsgi/;
      
  # uWSGI serving Django.
  upstream django {
    # Distribute requests to servers based on client IP. This keeps load
    # balancing fair but consistent per-client. In this instance we're
    # only using one uWGSI worker anyway.
    ip_hash;
    server unix:${uwsgi_sock_path};
  }
      
  server {
    listen      ${port};
    server_name ${hostname};
    charset     utf-8;
        
    # Django admin media.
    location /admin_media/ {
      alias ${django_location}/django/contrib/admin/media/;
    }
        
    # Your project's static media.
    location /media/ {
      alias ${project_location}/media/;
    }
        
    # Finally, send all non-media requests to the Django server.
    location / {
      uwsgi_pass  django;
      #include     uwsgi_params;
      uwsgi_param  QUERY_STRING       $query_string;
      uwsgi_param  REQUEST_METHOD     $request_method;
      uwsgi_param  CONTENT_TYPE       $content_type;
      uwsgi_param  CONTENT_LENGTH     $content_length;

      uwsgi_param  REQUEST_URI        $request_uri;
      uwsgi_param  PATH_INFO		$document_uri;
      uwsgi_param  DOCUMENT_ROOT      $document_root;
      uwsgi_param  SERVER_PROTOCOL    $server_protocol;

      uwsgi_param  REMOTE_ADDR        $remote_addr;
      uwsgi_param  REMOTE_PORT        $remote_port;
      uwsgi_param  SERVER_PORT        $server_port;
      uwsgi_param  SERVER_NAME        $server_name;
    }
  }
}
